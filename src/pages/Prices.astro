---
// pricing.astro
import Card from "../components/prices/Card.astro";
import CardHeader from "../components/prices/CardHeader.astro";
import CardTitle from "../components/prices/CardTitle.astro";
import CardContent from "../components/prices/CardContent.astro";
import PriceCardRow from "../components/prices/PriceCardRow.astro";
import MetaSvgIcon from "../components/icons/MetaSvgIcon.astro";
import IAIcon from "../components/icons/IAIcon.astro";

const plans = [
  {
    title: "Plan Informativo",
    price: "$40.000/mes",
    features: [
      "Responder preguntas de tu centro de turismo",
      "Resolver preguntas frecuentes",
      "Brindar información relevante como horarios o ubicación",
    ],
  },
  {
    title: "Gestor de turnos",
    price: "$60.000/mes",
    features: [
      "Todo lo que incluye el plan <span class='font-extrabold text-primary'>informativo</span>",
      "Reservar turnos de pádel",
      "Tomar turnos de peluquería",
      "Agendar turnos para manicura",
      "Gestiona tu consultorio",
    ],
  },
  {
    title: "Personalizado",
    price: "A definir",
    features: [
      "Panel de control en tiempo real",
      "Adaptado a medida",
      "Notificaciones a través de WhatsApp",
      "Registro de conversaciones",
      "Responder y generar mensajes de voz",
      "Flujos de conversación avanzados",
    ],
  },
];

const additionals = [
  {
    title: "Mejora tu presencia con Meta",
    description:
      "Aprovechá la tecnología de Meta para mejorar tus conversaciones",
    bgColor: "bg-[#0080FB]",
    icon: MetaSvgIcon,
  },
  {
    title: "Mejorar tus conversaciones con IA",
    description:
      "Aprovechá la Inteligencia Artificial para generar flujos de conversación más efectivos y eficientes",
    bgColor: "bg-[#ED254E]",
    icon: IAIcon,
  },
];
---

<style>
  .active-button {
    background-color: #ffffff;
    border: 2px solid #008000;
    color: #008000;
  }
</style>

<section id="pricing" class="w-full py-12 md:py-24 lg:py-32">
  <div class="container mx-auto px-4 md:px-6">
    <h2
      class="mb-6 text-center text-3xl font-bold tracking-tighter md:text-5xl"
    >
      Inversión
    </h2>
    <h3
      class="mb-12 text-center text-xl font-medium tracking-tighter sm:text-3xl"
    >
      Elegí el plan que mejor se adapte a tus necesidades
    </h3>

    <div class="mb-12 grid gap-6 sm:grid-cols-2 lg:grid-cols-3">
      {
        plans.map((plan) => (
          <Card>
            <CardHeader>
              <CardTitle>{plan.title}</CardTitle>
            </CardHeader>
            <CardContent>
              <div class="flex h-80 flex-col justify-between">
                <div>
                  <div class="text-3xl font-bold">{plan.price}</div>
                  <ul class="mt-4 space-y-2">
                    {plan.features.map((feature) => (
                      <PriceCardRow>
                        <Fragment set:html={feature} />
                      </PriceCardRow>
                    ))}
                  </ul>
                </div>
                <button
                  class="hover:bg-primary-dark mt-4 w-full rounded bg-primary px-4 py-2 text-sm text-white transition-colors"
                  data-plan={plan.title}
                >
                  Quiero este plan
                </button>
              </div>
            </CardContent>
          </Card>
        ))
      }
    </div>

    <h3
      class="mb-12 text-center text-xl font-semibold tracking-tighter sm:text-3xl"
    >
      Consultá por nuestros adicionales
    </h3>

    <div class="grid gap-6 sm:grid-cols-1 lg:grid-cols-2">
      {
        additionals.map((additional) => (
          <div
            class={`flex items-center justify-between overflow-hidden rounded-lg ${additional.bgColor} p-6 text-white shadow-md`}
          >
            <div class="flex flex-col">
              <div class="text-lg font-semibold sm:text-2xl">
                {additional.title}
              </div>
              <div class="mt-2 text-sm">{additional.description}</div>
            </div>
            <div class="flex w-1/5 shrink-0 grow-0 justify-center">
              <additional.icon color="white" size={48} />
            </div>
          </div>
        ))
      }
    </div>
  </div>
</section>

<script>
  document.querySelectorAll("button[data-plan]").forEach((button) => {
    button.addEventListener("click", () => {
      const isActive = button.classList.contains("active-button");

      // Remove active state from all buttons
      document.querySelectorAll("button[data-plan]").forEach((btn) => {
        btn.classList.remove("active-button");
        btn.innerText = "Quiero este plan";
      });

      if (!isActive) {
        // Add active state to the clicked button
        button.classList.add("active-button");
        button.innerText = "Plan seleccionado";

        // Update hidden input and display selected plan
        const selectedPlan = button.getAttribute("data-plan");

        // Use localStorage to store the selected plan
        localStorage.setItem("selectedPlan", selectedPlan);

        // Dispatch a custom event to notify the contact form
        window.dispatchEvent(
          new CustomEvent("planSelected", { detail: selectedPlan })
        );

        // Scroll to the contact form
        document.getElementById("contact").scrollIntoView({
          behavior: "smooth",
        });
      } else {
        // Clear the selected plan
        localStorage.removeItem("selectedPlan");

        // Dispatch a custom event to notify the contact form
        window.dispatchEvent(new CustomEvent("planSelected", { detail: null }));
      }
    });
  });

  // Check for previously selected plan on page load
  document.addEventListener("DOMContentLoaded", () => {
    const selectedPlan = localStorage.getItem("selectedPlan");
    if (selectedPlan) {
      const button = document.querySelector(
        `button[data-plan="${selectedPlan}"]`
      );
      if (button) {
        button.classList.add("active-button");
        button.innerText = "Plan seleccionado";
      }
    }
  });
</script>
