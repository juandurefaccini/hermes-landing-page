---
const RECAPTCHA_SITE_KEY = "6LfKhDMqAAAAAOsa-sQGO4P6uKWxkV9OtYxdbLBR";
---

<form id="contact-form" class="space-y-6" novalidate>
  <input type="hidden" id="selected-plan" name="selected-plan" />
  <div class="grid grid-cols-1 gap-6 md:grid-cols-2">
    <div class="space-y-2">
      <label for="first-name" class="block text-sm font-medium text-gray-700">
        Nombre
      </label>
      <input
        id="first-name"
        name="first-name"
        type="text"
        autocomplete="given-name"
        placeholder="Ingresá tu nombre"
        required
        aria-required="true"
        class="mt-1 block w-full rounded-md border border-gray-300 px-3 py-2 shadow-sm focus:border-primary focus:outline-none focus:ring-primary sm:text-sm"
      />
      <p class="text-sm text-red-600" id="first-name-error" aria-live="polite">
      </p>
    </div>
    <div class="space-y-2">
      <label for="phone-number" class="block text-sm font-medium text-gray-700">
        Teléfono (opcional)
      </label>
      <input
        id="phone-number"
        name="phone-number"
        type="text"
        autocomplete="tel"
        placeholder="Tu número de teléfono"
        class="mt-1 block w-full rounded-md border border-gray-300 px-3 py-2 shadow-sm focus:border-primary focus:outline-none focus:ring-primary sm:text-sm"
      />
      <p
        class="text-sm text-red-600"
        id="phone-number-error"
        aria-live="polite"
      >
      </p>
    </div>
  </div>
  <div class="space-y-2">
    <label for="email" class="block text-sm font-medium text-gray-700">
      Email
    </label>
    <input
      id="email"
      name="email"
      type="email"
      autocomplete="email"
      placeholder="Ingresá tu correo"
      required
      aria-required="true"
      class="mt-1 block w-full rounded-md border border-gray-300 px-3 py-2 shadow-sm focus:border-primary focus:outline-none focus:ring-primary sm:text-sm"
    />
    <p class="text-sm text-red-600" id="email-error" aria-live="polite"></p>
  </div>
  <div class="space-y-2">
    <label for="message" class="block text-sm font-medium text-gray-700">
      Mensaje
    </label>
    <div>
      <div class="flex items-center space-x-2">
        <p class="text-sm text-gray-500">¿En qué podemos ayudarte?</p>
      </div>
      <textarea
        id="message"
        name="message"
        rows="4"
        placeholder="Quiero agendar una reunión. Tengo una duda. Otra consulta..."
        required
        aria-required="true"
        class="mt-1 block w-full rounded-md border border-gray-300 px-3 py-2 shadow-sm focus:border-primary focus:outline-none focus:ring-primary sm:text-sm"
      ></textarea>
      <p class="text-sm text-red-600" id="message-error" aria-live="polite"></p>
    </div>

    <script
      is:inline
      src=`https://www.google.com/recaptcha/api.js?render=${RECAPTCHA_SITE_KEY}&badge=bottomright`
      async
      defer></script>

    <div class="flex w-full pt-4 text-center">
      <button
        type="submit"
        class="grow rounded-lg border bg-primary px-4 py-2 font-medium text-white"
      >
        Enviar
      </button>
    </div>
  </div>

  <div id="form-message" class="mt-4 hidden text-sm" aria-live="polite"></div>
  <div
    id="loading-spinner"
    class="mt-4 flex hidden items-center justify-center"
  >
    <div
      class="loader h-12 w-12 rounded-full border-4 border-t-4 border-gray-200 ease-linear"
    >
    </div>
  </div>

  <script>
    document.addEventListener("DOMContentLoaded", () => {
      const form = document.getElementById("contact-form");
      const formMessage = document.getElementById("form-message");
      const loadingSpinner = document.getElementById("loading-spinner");

      if (!form || !formMessage || !loadingSpinner) {
        console.error("Form elements not found.");
        return;
      }

      form.addEventListener("submit", async (e) => {
        e.preventDefault();
        showLoadingSpinner();

        try {
          const token = await grecaptcha.execute(
            "6LfKhDMqAAAAAOsa-sQGO4P6uKWxkV9OtYxdbLBR",
            { action: "submit" }
          );

          clearErrorMessages();
          const formData = new FormData(form as HTMLFormElement);
          formData.append("g-recaptcha-response", token);

          const response = await fetch("/api/contact", {
            method: "POST",
            body: formData,
          });

          if (!response.ok) {
            throw new Error("Network response was not ok");
          }

          const result = await response.json();

          if (result.success) {
            window.location.href = "/success";
          } else {
            displayFormErrors(result.errors);
          }
        } catch (error) {
          console.error("Error:", error);
          displayErrorMessage(
            "Error al enviar el mensaje. Por favor, inténtalo de nuevo."
          );
        } finally {
          hideLoadingSpinner();
        }
      });

      function showLoadingSpinner() {
        if (!loadingSpinner) {
          return;
        }
        loadingSpinner.classList.remove("hidden");
      }

      function hideLoadingSpinner() {
        if (!loadingSpinner) {
          return;
        }
        loadingSpinner.classList.add("hidden");
      }

      function clearErrorMessages() {
        document.querySelectorAll('[id$="-error"]').forEach((el) => {
          el.textContent = "";
        });
      }

      function displayFormErrors(errors: Record<string, string>) {
        if (!formMessage) {
          return;
        }
        formMessage.textContent =
          "Por favor, corrige los errores en el formulario.";
        formMessage.classList.remove("hidden");
        formMessage.classList.add("text-red-600");

        for (const [field, error] of Object.entries(errors)) {
          const errorElement = document.getElementById(`${field}-error`);
          if (errorElement) {
            errorElement.textContent = error as string;
          }
        }
      }

      function displayErrorMessage(message: string) {
        if (!formMessage) {
          return;
        }
        formMessage.textContent = message;
        formMessage.classList.remove("hidden");
        formMessage.classList.add("text-red-600");
      }
    });
  </script>
</form>
